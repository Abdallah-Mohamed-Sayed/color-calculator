* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

body {
  direction: rtl;
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  margin: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  height: 100vh;
  overflow: hidden;
  background: linear-gradient(
    45deg,
    #7bdff2,
    #b2f7ef,
    #a6f1e0,
    #63a4ff,
    #7bdff2
  );
  background-size: 400% 400%;
  animation: gradientBackground 10s ease infinite;
}

@keyframes gradientBackground {
  0% {
    background-position: 0% 50%;
  }

  50% {
    background-position: 100% 50%;
  }

  100% {
    background-position: 0% 50%;
  }
}

.container {
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  background-color: rgba(255, 255, 255, 0.9);
  display: flex;
  padding: 10px;
  padding-top: 20px;
  border-radius: 8px;
  position: relative;
  align-items: center;
  min-width: 400px;
  max-width: 90%;
  margin: 0 auto;
  flex-direction: column;
}

.up {
  flex: 1;
}

.up ul {
  display: flex;
  flex-direction: row;
  list-style: none;
  justify-content: center;
  gap: 20px;
}

.up ul li {
  padding: 10px 20px;
  cursor: pointer;
  user-select: none;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
  background-color: #eee;
  transition: 0.3s;
}

.up ul li:hover {
  background-color: #ddd;
}

.up ul li.active {
  background-color: #ccc;
}

.down {
  padding: 10px;
  padding-top: 20px;
  border-radius: 5px;
  background-color: #ccc;
  display: flex;
  gap: 20px;
  width: 100%;
  position: relative;
  justify-content: center;
}

.down > div {
  display: flex;
  gap: 10px;
  transition: 0.3s;
  position: absolute;
  opacity: 0;
  transform: scaleX(0);
  min-width: 500px;
}

.down > div.active {
  position: relative;
  opacity: 1;
  transform: scaleX(1);
}

.operation {
  display: flex;
  gap: 20px;
  align-items: center;
  right: 0;
  transform-origin: right center;
}

.cable {
  flex: 1;
  min-width: 200px;
}

#calculator {
  text-align: center;
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 10px;
  align-items: center;
  padding: 10px;
}

#calculator label {
  display: block;
  font-size: 14px;
  color: #333;
}

#smallCable {
  width: calc(100% - 16px);
  padding: 8px;
  box-sizing: border-box;
}

.btns {
  display: flex;
  width: 100%;
  gap: 10px;
  align-items: center;
  position: relative;
}

button.submitButton {
  background-color: dodgerblue;
  color: #fff;
  padding: 10px;
  border: none;
  transition: 0.3s;
  border-radius: 5px;
  user-select: none;
  cursor: pointer;
  font-size: 16px;
  flex: 6;
}

button.submitButton:hover {
  background-color: #0063db;
}

button#hearBtn {
  background-color: transparent;
  min-width: 40px;
  flex: 1;
  padding: 5px 10px;
  border-radius: 5px;
  cursor: pointer;
  border: none;
  transition: 0.3s;
}

button#hearBtn:hover {
  background-color: #ddd;
}

button#hearBtn.active {
  background-color: #fff;
}

#output {
  font-size: 14px;
  color: #333;
  opacity: 0;
  animation: fadeIn 0.5s ease-in-out forwards;
}

.reversed {
  left: 0;
  flex: 1;
  transform-origin: left center;
}

.choose-color {
  justify-content: center;
  display: flex;
  flex: 1;
  flex-direction: row;
  gap: 20px;
}

.choose-color > div {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.small-color > div,
.tube-color > div {
  display: flex;
  flex-direction: row;
  width: 100%;
  align-items: center;
  justify-content: space-between;
  min-width: 100px;
}

.small-color > div label,
.tube-color > div label {
  flex: 1;
  position: relative;
  padding-left: 30px;
  transition: 0.3s;
}

.small-color > div label::before,
.tube-color > div label::before {
  content: "";
  position: absolute;
  width: 15px;
  height: 15px;
  border: 1px solid dodgerblue;
  top: 50%;
  left: 0;
  transform: translateY(-50%);
}

.small-color > div label::after,
.tube-color > div label::after {
  content: "";
  width: 10px;
  height: 10px;
  position: absolute;
  top: 50%;
  left: 8px;
  transform: translate(-4.5px, -50%);
  transition: 0.5s;
}

.nest input:checked + label::after {
  background-color: dodgerblue;
}

.nest input:not(:checked):hover + label::after {
  background-color: #2195f351;
}

.nest input:not(:checked):hover + label::after {
  background-color: #2195f351;
}

.nest input:checked + label {
  color: dodgerblue;
}

input:not(:checked):hover + label {
  color: dodgerblue;
}

.small-color > div input,
.tube-color > div input {
  outline: none;
  appearance: none;
}

#reversedBtn {
  flex: 0;
}

.output {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 10px;
  text-align: center;
  justify-content: center;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@media (max-width: 767px) {
  .operation {
    flex-direction: column;
    align-items: stretch; /* Ensures child elements stretch to full width */
  }

  .cable {
    flex: none; /* Disable flex for .cable to take full width */
    width: 100%; /* Ensure .cable takes full width */
    max-width: 250px;
    align-self: center;
  }

  #calculator {
    flex: none; /* Disable flex for #calculator to take full width */
    width: 100%; /* Ensure #calculator takes full width */
  }

  .down > div {
    flex-direction: column;
    min-width: 300px;
  }
}
/* SVG Styles */

.j-cls-1 {
  fill: #fffffb;
  stroke: #979a93;
  stroke-width: 11px;
}

.j-cls-2 {
  fill: #434244;
}

.j-cls-3 {
  fill: #ffd8a8;
}

.in-tube {
  fill: #cee1ea;
}

.cls-1,
.num-5,
.num-4,
.num-9,
.num-7,
.num-11,
.num-12,
.num-10,
.num-8,
.num-3,
.num-2,
.num-1,
.num-6 {
  stroke-miterlimit: 10;
}

.num-5,
.num-4,
.num-9,
.num-7,
.num-11,
.num-12,
.num-10,
.num-8,
.num-3,
.num-2,
.num-1,
.num-6 {
  stroke: #000;
  stroke-width: 0.25px;
}

.num-8 {
  fill: #000000;
}

.num-3 {
  fill: #00ff00;
}

.num-2 {
  fill: #f79646;
}

.num-1 {
  fill: #3366ff;
}

.num-6 {
  fill: #fff;
}

.num-5 {
  fill: #c0c0c0;
}

.num-4 {
  fill: #993300;
}

.num-9 {
  fill: #ffff00;
}

.num-7 {
  fill: #ff0000;
}

.num-11 {
  fill: #ffccff;
}

.num-12 {
  fill: #66ffff;
}

.num-10 {
  fill: #cc66ff;
}

#Main g:not(#Jacket) circle:not(.t) {
  transition: r 2s ease-in-out;
  overflow: visible;
  position: relative;
  z-index: 1;
}

#Main g:not(#Jacket) circle:not(.t).active {
  animation: scaleCircle 2s ease-in-out infinite;
  position: relative;
  z-index: 100;
}

@keyframes scaleCircle {
  0% {
    r: 6.77;
  }

  50% {
    r: 30;
  }

  100% {
    r: 6.77;
  }
}
